name: .NET CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
jobs:
  linuxpublish:
    strategy:
      fail-fast: false
      matrix:
        runtime: [linux-x64, linux-arm64]
    runs-on: ubuntu-latest
    name: Linux Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: Linux Publish
        env:
          runtime: ${{ matrix.runtime }}
        run: |
          read -ra options <<< "--configuration Release -p:DebugType=embedded -p:PublishTrimmed=false --no-self-contained -p:SourceRevisionId=$(git rev-parse --short HEAD)"
          dotnet publish OpenTabletDriver.Daemon "${options[@]}" --runtime "$runtime" -o "build/$runtime"
          dotnet publish OpenTabletDriver.Console "${options[@]}" --runtime "$runtime" -o "build/$runtime"
          dotnet publish OpenTabletDriver.UX.Gtk "${options[@]}" --runtime "$runtime" -o "build/$runtime"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenTabletDriver ${{ matrix.runtime }}
          path: build/${{ matrix.runtime }}

      - name: Generate udev Rules
        run: ./generate-rules.sh

      - name: Upload udev Rules
        uses: actions/upload-artifact@v3
        with:
          name: udev Rules
          path: bin/99-opentabletdriver.rules

  macospublish:
    strategy:
      fail-fast: false
      matrix:
        runtime: [osx-x64, osx-arm64]
    runs-on: ubuntu-latest
    name: MacOS Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: MacOS Publish
        env:
          runtime: ${{ matrix.runtime }}
        run: |
          read -ra options <<< "--configuration Release -p:DebugType=embedded -p:PublishTrimmed=false --no-self-contained -p:SourceRevisionId=$(git rev-parse --short HEAD)"
          dotnet publish OpenTabletDriver.Daemon "${options[@]}" --runtime "$runtime" -o "build/$runtime"
          dotnet publish OpenTabletDriver.Console "${options[@]}" --runtime "$runtime" -o "build/$runtime"
          dotnet publish OpenTabletDriver.UX.MacOS "${options[@]}" --runtime "$runtime" -o "build/$runtime"

      - name: Upload MacOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenTabletDriver ${{ matrix.runtime }}
          path: build/${{ matrix.runtime }}

  windowspublish:
    strategy:
      fail-fast: false
      matrix:
        runtime: [win-x64, win-x86, win-arm64]
    runs-on: windows-latest
    name: Windows Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: Windows Publish
        env:
          runtime: ${{ matrix.runtime }}
        run: |
          $options=@("--configuration", "Release", "-p:PublishSingleFile=true", "-p:DebugType=embedded", "--no-self-contained", "-p:SourceRevisionId=$(git rev-parse --short HEAD)")
          dotnet publish OpenTabletDriver.Daemon $options --runtime $ENV:runtime -o build/$ENV:runtime
          dotnet publish OpenTabletDriver.Console $options --runtime $ENV:runtime -o build/$ENV:runtime
          dotnet publish OpenTabletDriver.UX.Wpf $options --runtime $ENV:runtime -o build/$ENV:runtime

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenTabletDriver ${{ matrix.runtime }}
          path: build/${{ matrix.runtime }}

  linter:
    name: dotnet format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: Lint Changed Files
        run: |
          mapfile -t files < <(git diff --name-only --diff-filter=AM HEAD^ HEAD | grep '.*\.cs$')
          if [ ${#files[@]} -ne 0 ]; then dotnet format OpenTabletDriver --verify-no-changes --include "${files[@]}"; fi

  unittests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'
          include-prerelease: true

      - name: Run tests
        run: dotnet test
